{"mappings":"AAIA,MACMA,EAAWC,SAASC,cAAc,SAClCC,EAAcF,SAASC,cAAc,YACrCE,EAAUH,SAASC,cAAc,kBACjCG,EAAkB,CACtBC,MAAO,GACPC,SAAU,IAEZ,IAAIC,EAAkB,MA6CtB,WACE,MAAMF,MAAEA,EAAKC,SAAEA,IANfC,EACEC,KAAKC,MAAMC,aAAaC,QAjDJ,yBAiDiCP,EAChDG,GAKPR,EAASa,MAAQP,EACjBH,EAAYU,MAAQN,EA9CtBO,GAEAV,EAAQW,iBAAiB,SAMzB,eALAX,EAAQW,iBAAiB,UASzB,SAA8BC,GAC5BA,EAAEC,iBACFC,QAAQC,IAAI,aAVdnB,EAASe,iBAAiB,SAa1B,SAAsBC,GACpBR,EAAkB,IACbA,EACHF,MAAOU,EAAEI,OAAOP,OAElB,MAAMA,EAAQJ,KAAKY,UAAUb,GAC7BG,aAAaW,QAjCS,sBAiCgBT,GACtCK,QAAQC,IAAIH,EAAEI,OAAOP,UAlBvBV,EAAYY,iBAAiB,SAqB7B,SAAyBC,GACvBR,EAAkB,IACbA,EACHD,SAAUS,EAAEI,OAAOP,OAErB,MAAMA,EAAQJ,KAAKY,UAAUb,GAC7BG,aAAaW,QA3CS,sBA2CgBT,GACtCK,QAAQC,IAAIH,EAAEI,OAAOP","sources":["src/js/03-feedback.js"],"sourcesContent":["// const text = 'text';\n// const key = 'testKey';\n// localStorage.getItem(key);\n// console.log(localStorage.getItem(key));\nconst localStorageKey = 'feedback-form-state';\nconst inputRef = document.querySelector('input');\nconst textareaRef = document.querySelector('textarea');\nconst formRef = document.querySelector('.feedback-form');\nconst initialFormData = {\n  input: '',\n  textArea: '',\n};\nlet currentFormData = null;\n// debugger;\nfillForm();\n\nformRef.addEventListener('input', onFormInput);\nformRef.addEventListener('submit', onFeedbackFormSubmit);\ninputRef.addEventListener('input', onInputInput);\n\ntextareaRef.addEventListener('input', onTextAreaInput);\n\nfunction onFormInput() {\n  // console.log('input');\n}\n\nfunction onFeedbackFormSubmit(e) {\n  e.preventDefault();\n  console.log('submit');\n}\n\nfunction onInputInput(e) {\n  currentFormData = {\n    ...currentFormData,\n    input: e.target.value,\n  };\n  const value = JSON.stringify(currentFormData);\n  localStorage.setItem(localStorageKey, value);\n  console.log(e.target.value);\n}\n\nfunction onTextAreaInput(e) {\n  currentFormData = {\n    ...currentFormData,\n    textArea: e.target.value,\n  };\n  const value = JSON.stringify(currentFormData);\n  localStorage.setItem(localStorageKey, value);\n  console.log(e.target.value);\n}\n\nfunction loadFeedbackFormState() {\n  currentFormData =\n    JSON.parse(localStorage.getItem(localStorageKey)) || initialFormData;\n  return currentFormData;\n}\n\nfunction fillForm() {\n  const { input, textArea } = loadFeedbackFormState();\n  inputRef.value = input;\n  textareaRef.value = textArea;\n}\n// Выполняй это задание в файлах 03-feedback.html и 03-feedback.js. Разбей его на несколько подзадач:\n\n// Отслеживай на форме событие input, и каждый раз записывай в локальное хранилище объект с полями email и message, в которых сохраняй текущие значения полей формы. Пусть ключом для хранилища будет строка \"feedback-form-state\".\n// При загрузке страницы проверяй состояние хранилища, и если там есть сохраненные данные, заполняй ими поля формы. В противном случае поля должны быть пустыми.\n// При сабмите формы очищай хранилище и поля формы, а также выводи объект с полями email, message и текущими их значениями в консоль.\n// Сделай так, чтобы хранилище обновлялось не чаще чем раз в 500 миллисекунд. Для этого добавь в проект и используй библиотеку lodash.throttle.\n"],"names":["$945622fd0f572e60$var$inputRef","document","querySelector","$945622fd0f572e60$var$textareaRef","$945622fd0f572e60$var$formRef","$945622fd0f572e60$var$initialFormData","input","textArea","$945622fd0f572e60$var$currentFormData","JSON","parse","localStorage","getItem","value","$945622fd0f572e60$var$fillForm","addEventListener","e","preventDefault","console","log","target","stringify","setItem"],"version":3,"file":"03-feedback.26e3e6ee.js.map"}